220730 1. 프로그래머스_2_프린터

복습. some 과 every 를 쓰면 편하다.

```
      function solution(priorities, location) {
        priorities = priorities.map((v, i) => [v, i]);
        let cnt = 0;

        while (true) {
          let tmp = priorities.shift();
          if (priorities.some((v) => v[0] > tmp[0])) priorities.push(tmp);
          else {
            cnt++;
            if (tmp[1] === location) return cnt;
          }
        }
      }
```

220730 2. 프로그래머스_2_올바른 괄호

진짜 쉽지만 스택큐의 가장 기본적인 형식의 문제라 참고형식으로 넣었다.

```
    function solution(s){
        let stack = []
        for(let x of s) {
            if(x === '(') stack.push('(')
            else if(!stack.pop()) return false
        }
        return stack.length ? false : true
    }
```

220801 3. 백준_실버4_1158_요세푸스 문제

유명한 큐 문제. 배열을 만들고 시뮬레이션을 돌려보면 쉽게 구할 수 있다.

```
      function solution(n, k) {
        let answer = "";
        let queue = Array.from({ length: n }, (_, i) => i + 1);

        let i = 0;
        while (queue.length) {
          let tmp = queue.shift();
          if (++i === k) {
            answer += `${tmp}, `;
            i = 0;
          } else {
            queue.push(tmp);
          }
        }

        return `<${answer.slice(0, -2)}>`;
      }
```